(function() {
    /**
     * Ajuste decimal de un número.
     *
     * @param {String}  tipo  El tipo de ajuste.
     * @param {Number}  valor El numero.
     * @param {Integer} exp   El exponente (el logaritmo 10 del ajuste base).
     * @returns {Number} El valor ajustado.
     */
    function decimalAdjust(type, value, exp) {
      // Si el exp no está definido o es cero...
      if (typeof exp === 'undefined' || +exp === 0) {
        return Math[type](value);
      }
      value = +value;
      exp = +exp;
      // Si el valor no es un número o el exp no es un entero...
      if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
        return NaN;
      }
      // Shift
      value = value.toString().split('e');
      value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));
      // Shift back
      value = value.toString().split('e');
      return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));
    }
  
    // Decimal round
    if (!Math.round10) {
      Math.round10 = function(value, exp) {
        return decimalAdjust('round', value, exp);
      };
    }
    // Decimal floor
    if (!Math.floor10) {
      Math.floor10 = function(value, exp) {
        return decimalAdjust('floor', value, exp);
      };
    }
    // Decimal ceil
    if (!Math.ceil10) {
      Math.ceil10 = function(value, exp) {
        return decimalAdjust('ceil', value, exp);
      };
    }
})();

exports.printMsg = function(parcial1, parcial2, trabajo, final){
    console.log('Promedio notas');
    
    var parcial = (parseFloat(parcial1) + parseFloat(parcial2)) / 2;
    var promedio = (parcial + parseFloat(trabajo) + parseFloat(final)) / 3;
    var redondeado = Math.round10(promedio, -2);

    return redondeado;
}

exports.printParcial = function(parcial1, parcial2){
  var parcial = (parseFloat(parcial1) + parseFloat(parcial2)) /2;
  var reparcial = Math.round10(parcial, -2); 
  
  return reparcial;
}


//console.log("resultado:  "+ this.printMsg(12,12,12,12));

